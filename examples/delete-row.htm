
<!-- saved from url=(0040)https://htmx.org/examples/click-to-edit/ -->
<html lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <title>(/) ctmx - backend tools for htmx</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="./click-to-edit_files/site.css">
<style>                      .htmx-indicator{opacity:0;transition: opacity 200ms ease-in;}                      .htmx-request .htmx-indicator{opacity:1}                      .htmx-request.htmx-indicator{opacity:1}
  tr.htmx-swapping td {
    opacity: 0;
    transition: opacity 1s ease-out;
  }
  .mmargin {
    margin: 10px
  }
  </style></head>
<body hx-ext="class-tools, preload, static">
<div class="top-nav">
    <div class="c">
        <div class="menu">
            <div class="logo-wrapper">
                <span onclick="location.href = '../'" class="logo light"><a>c</a>tmx</span>
                <svg onclick="document.getElementById(&#39;nav&#39;).classList.toggle(&#39;show&#39;)" class="hamburger" viewBox="0 0 100 80" width="25" height="25" style="margin-bottom:-5px">
                    <rect width="100" height="20" style="fill:rgb(52, 101, 164)" rx="10"></rect>
                    <rect y="30" width="100" height="20" style="fill:rgb(52, 101, 164)" rx="10"></rect>
                    <rect y="60" width="100" height="20" style="fill:rgb(52, 101, 164)" rx="10"></rect>
                </svg>
            </div>

            <div id="nav" class="navigation nav"> <!-- don't boost on demo pages, sinon hijacks everything :/ -->

                <div class="navigation-items" preload="mouseover">
                    <div>
                        <a href="/examples/index.htm">examples</a>
                    </div>
                </div>
                <div class="github-stars">
                    <a href="https://github.com/whamtet/ctmx">github</a>
                    <iframe style="margin:auto;" src="https://ghbtns.com/github-btn.html?user=whamtet&repo=ctmx&type=star&count=true" frameborder="0" scrolling="0" width="150" height="20" title="Star ctmx on GitHub"></iframe>
                </div>
            </div>
        </div>
    </div>
</div>


<div class="c content">

<h2>Delete Row</h2>
<p>
  This example shows how to implement a delete button that removes a table row upon completion.
</p>

<pre id="editor1" class="language-html" style="height: 550px">
;; this is normally on the backend

(def data
  [{:name "Joe Smith" :email "joe@smith.org"}
   {:name "Angie MacDowell" :email "angie@macdowell.org"}
   {:name "Fuqua Tarkenton" :email "fuqua@tarkenton.org"}
   {:name "Kim Yee"	:email "kim@yee.org"}])

(defcomponent ^:endpoint tr [{:keys [request-method]} i {:keys [name email]}]
  (if (= :delete request-method)
    ""
    [:tr
      [:td name]
      [:td email]
      [:td "Active"]
      [:td [:button.btn.btn-danger {:hx-delete "tr"} "Delete"]]]))

(make-routes
  "/demo"
  (fn [req]
    [:table.table.delete-row-example
      [:thead
        [:tr [:th "Name"] [:th "Email"] [:th "Status"]]]
      [:tbody {:hx-confirm "Are you sure?" :hx-target "closest tr" :hx-swap "outerHTML swap:1s"}
        (ctmx.rt/map-indexed tr req data)]]))

</pre>

<div id="demo"></div>
<p style="margin-top: 50px">
  The table body has a <a>hx-confirm</a> attribute to confirm the delete action.
  It also set the target to be the <code>closest tr</code> that is, the closest table row,
  for all the buttons (<a>hx-target</a> is inherited from parents in the DOM.)
  The swap specification in <a>hx-swap</a> says to swap the entire target out
  and to wait 1 second after receiving a response.
  This last bit is so that we can use the following CSS:
</p>
  <pre>
  tr.htmx-swapping td {
    opacity: 0;
    transition: opacity 1s ease-out;
  }
  </pre>
</div>


</body>
<script src="../src-min-noconflict/ace.js" type="text/javascript" charset="utf-8"></script>
<script src="../htmx.min.js"></script>
<script src="../htmx-static.js"></script>
<script src="./click-to-edit_files/class-tools.js"></script>
<script src="./click-to-edit_files/preload.js"></script>
<script src="../common.js"></script>
<script>
edAppend('editor1');
</script>
<script src="/out/ctmx_static.js"></script>
<script>onload = () => ctmx_static.eval.init(true);</script>
</html>
