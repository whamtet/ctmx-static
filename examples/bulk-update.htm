
<!-- saved from url=(0040)https://htmx.org/examples/click-to-edit/ -->
<html lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <title>(/) ctmx - backend tools for htmx</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="/site.css">
<style>
  .htmx-settling tr.Inactive td {
    background: lightcoral;
  }
  .htmx-settling tr.Active td {
    background: darkseagreen;
  }
  tr td {
    transition: all 1.2s;
  }
  .mmargin {
    margin: 10px
  }
  </style></head>
<body hx-ext="class-tools, preload, static">
<div class="top-nav">
    <div class="c">
        <div class="menu">
            <div class="logo-wrapper">
                <span onclick="location.href = '../'" class="logo light"><a>c</a>tmx</span>
                <svg onclick="document.getElementById(&#39;nav&#39;).classList.toggle(&#39;show&#39;)" class="hamburger" viewBox="0 0 100 80" width="25" height="25" style="margin-bottom:-5px">
                    <rect width="100" height="20" style="fill:rgb(52, 101, 164)" rx="10"></rect>
                    <rect y="30" width="100" height="20" style="fill:rgb(52, 101, 164)" rx="10"></rect>
                    <rect y="60" width="100" height="20" style="fill:rgb(52, 101, 164)" rx="10"></rect>
                </svg>
            </div>

            <div id="nav" class="navigation nav"> <!-- don't boost on demo pages, sinon hijacks everything :/ -->

                <div class="navigation-items" preload="mouseover">
                    <div>
                        <a href="index.htm">examples</a>
                    </div>
                </div>
                <div class="github-stars">
                    <a href="https://github.com/whamtet/ctmx">github</a>
                    <iframe style="margin:auto;" src="https://ghbtns.com/github-btn.html?user=whamtet&repo=ctmx&type=star&count=true" frameborder="0" scrolling="0" width="150" height="20" title="Star ctmx on GitHub"></iframe>
                </div>
            </div>
        </div>
    </div>
</div>


<div class="c content">

<h2>Bulk Update</h2>
<p>
  This demo shows how to implement a common pattern where rows are selected and then bulk updated.
  This is accomplished by putting a form around a table, with checkboxes in the table.
</p>

<pre id="editor1" class="language-html" style="height: 970px">
;; this is normally on the backend

(def data
  (atom
    [{:name "Joe Smith" :email "joe@smith.org" :status "Inactive"}
     {:name "Angie MacDowell" :email "angie@macdowell.org" :status "Inactive"}
     {:name "Fuqua Tarkenton" :email "fuqua@tarkenton.org" :status "Inactive"}
     {:name "Kim Yee"	:email "kim@yee.org"	:status "Inactive"}]))

(defn- set-status [status data i]
  (update data i assoc :status status))

(defn tr [ids action i {:keys [name email status]}]
  [:tr {:class (when (contains? ids i) action)}
    [:td [:input {:type "checkbox" :name "ids" :value i :checked (contains? ids i)}]]
    [:td name]
    [:td email]
    [:td status]])

(defcomponent ^:endpoint bulk-update [{:keys [request-method]} ^:ints ids status]
  (when (= :put request-method)
    (swap! data #(reduce (partial set-status status) % ids)))
  [:form {:id id}
    [:table
      [:thead
        [:tr
          [:th]
          [:th "Name"]
          [:th "Email"]
          [:th "Status"]]]
      [:tbody (map-indexed (partial tr (set ids) status) @data)]]
    [:a.btn.mmargin
      {:hx-put "bulk-update"
       :hx-vals (json {:status "Active"})
       :hx-target (hash ".")}
      "Activate"]
    [:a.btn.mmargin
      {:hx-put "bulk-update"
       :hx-vals (json {:status "Inactive"})
       :hx-target (hash ".")}
      "Deactivate"]])

(make-routes
  "/demo"
  (fn [req] (bulk-update req [] "")))
</pre>

<div id="demo"></div>
<p style="margin-top: 50px">
  We use the <code>.htmx-settling</code> class to flash the rows when they change status
</p>
  <pre>
  .htmx-settling tr.Inactive td {
    background: lightcoral;
  }
  .htmx-settling tr.Active td {
    background: darkseagreen;
  }
  tr td {
    transition: all 1.2s;
  }
  </pre>
</div>


</body>
<script src="../src-min-noconflict/ace.js" type="text/javascript" charset="utf-8"></script>
<script src="../htmx.min.js"></script>
<script src="../htmx-static.js"></script>
<script src="../common.js"></script>
<script>
edAppend('editor1');
</script>
<script src="/out/ctmx_static.js"></script>
<script>onload = () => ctmx_static.eval.init(true);</script>
</html>
