
<!-- saved from url=(0040)https://htmx.org/examples/click-to-edit/ -->
<html lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <title>(/) ctmx - backend tools for htmx</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="/site.css">
<style>
  tr.htmx-swapping td {
    opacity: 0;
    transition: opacity 1s ease-out;
  }
  .mmargin {
    margin: 10px
  }
  </style></head>
<body hx-ext="class-tools, preload, static">
<div class="top-nav">
    <div class="c">
        <div class="menu">
            <div class="logo-wrapper">
                <span onclick="location.href = '../'" class="logo light"><a>c</a>tmx</span>
                <svg onclick="document.getElementById(&#39;nav&#39;).classList.toggle(&#39;show&#39;)" class="hamburger" viewBox="0 0 100 80" width="25" height="25" style="margin-bottom:-5px">
                    <rect width="100" height="20" style="fill:rgb(52, 101, 164)" rx="10"></rect>
                    <rect y="30" width="100" height="20" style="fill:rgb(52, 101, 164)" rx="10"></rect>
                    <rect y="60" width="100" height="20" style="fill:rgb(52, 101, 164)" rx="10"></rect>
                </svg>
            </div>

            <div id="nav" class="navigation nav"> <!-- don't boost on demo pages, sinon hijacks everything :/ -->

                <div class="navigation-items" preload="mouseover">
                    <div>
                        <a href="index.htm">examples</a>
                    </div>
                  <div>
                    <a href="../about.html">about</a>
                  </div>
                </div>
                <div class="github-stars">
                    <a href="https://github.com/whamtet/ctmx">github</a>
                    <iframe style="margin:auto;" src="https://ghbtns.com/github-btn.html?user=whamtet&repo=ctmx&type=star&count=true" frameborder="0" scrolling="0" width="150" height="20" title="Star ctmx on GitHub"></iframe>
                </div>
            </div>
        </div>
    </div>
</div>


<div class="c content">

<h2>Active Search</h2>
<p>
  This example actively searches a contacts database as the user enters text.
</p>
<p>
  We start with a search input and an empty table:
</p>

<pre id="editor1" class="language-html" style="height: 730px">
;; this is normally on the backend

(def data
  [{:name "Joe Smith" :email "joe@smith.org"}
   {:name "Angie MacDowell" :email "angie@macdowell.org"}
   {:name "Fuqua Tarkenton" :email "fuqua@tarkenton.org"}
   {:name "Kim Yee"	:email "kim@yee.org"}])

(defn tr [{:keys [name email]}]
  [:tr [:td name] [:td email]])

(defcomponent ^:endpoint rows [req search]
  (let [search (.toLowerCase search)]
    (->> data
      (filter #(-> % :name .toLowerCase (.includes search)))
      (map tr))))

(make-routes
  "/demo"
  (fn [req]
    [:div
      [:h3 "Search Contacts"
        [:span.htmx-indicator
          [:img {:src "img/bars.svg"}] " Searching..."]]
      [:input.form-control
        {:type "text" :name "search" :placeholder "Search e.g. Joe"
         :hx-post "rows" :hx-trigger "keyup changed delay:500ms"
         :hx-target "#search-results"
         :hx-indicator ".htmx-indicator"}]
      [:table.table
        [:thead
          [:tr [:th "Name"] [:th "Email"]]]
        [:tbody#search-results
          (rows req "")]]]))

</pre>
<p>
  The input issues a <code>POST</code> to <code>rows</code> on the keyup event and sets the body of the table to be the resulting content.
</p>
<p>
  We add the <code>delay:500ms</code> modifier to the trigger to delay sending the query until the user stops typing.
  Additionally, we add the <code>changed</code> modifier to the trigger to ensure we don't send new queries
  when the user doesn't change the value of the input (e.g. they hit an arrow key).
</p>
<p style="margin-bottom: 50px">
  Finally, we show an indicator when the search is in flight with the <code>hx-indicator</code> attribute.
</p>
<div id="demo"></div>
</div>


</body>
<script src="../src-min-noconflict/ace.js" type="text/javascript" charset="utf-8"></script>
<script src="../htmx.min.js"></script>
<script src="../htmx-static.js"></script>
<script src="../common.js"></script>
<script>
htmx.config.defaultSwapStyle = 'innerHTML';
edAppend('editor1');
</script>
<script src="/out/ctmx_static.js"></script>
<script>onload = () => ctmx_static.eval.init(true);</script>
</html>
