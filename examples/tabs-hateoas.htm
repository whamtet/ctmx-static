
<!-- saved from url=(0040)https://htmx.org/examples/click-to-edit/ -->
<html lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <title>(/) ctmx - backend tools for htmx</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="/site.css">
<style>

  .tab-list {
		border-bottom: solid 3px #eee;
	}

	.tab-list a {
		display: inline-block;
		padding: 5px 10px;
		cursor:pointer;
	}

	.tab-list a.selected {
		background-color: #eee;
	}

	.tab-content {
		padding:10px;
		margin-bottom:100px;
	}
  </style></head>
<body hx-ext="class-tools, preload, static">
<div class="top-nav">
    <div class="c">
        <div class="menu">
            <div class="logo-wrapper">
                <span onclick="location.href = '../'" class="logo light"><a>c</a>tmx</span>
                <svg onclick="document.getElementById(&#39;nav&#39;).classList.toggle(&#39;show&#39;)" class="hamburger" viewBox="0 0 100 80" width="25" height="25" style="margin-bottom:-5px">
                    <rect width="100" height="20" style="fill:rgb(52, 101, 164)" rx="10"></rect>
                    <rect y="30" width="100" height="20" style="fill:rgb(52, 101, 164)" rx="10"></rect>
                    <rect y="60" width="100" height="20" style="fill:rgb(52, 101, 164)" rx="10"></rect>
                </svg>
            </div>

            <div id="nav" class="navigation nav"> <!-- don't boost on demo pages, sinon hijacks everything :/ -->

                <div class="navigation-items" preload="mouseover">
                    <div>
                        <a href="index.htm">examples</a>
                    </div>
                  <div>
                    <a href="../about.html">about</a>
                  </div>
                </div>
                <div class="github-stars">
                    <a href="https://github.com/whamtet/ctmx">github</a>
                    <iframe style="margin:auto;" src="https://ghbtns.com/github-btn.html?user=whamtet&repo=ctmx&type=star&count=true" frameborder="0" scrolling="0" width="150" height="20" title="Star ctmx on GitHub"></iframe>
                </div>
            </div>
        </div>
    </div>
</div>


<div class="c content">

<h2>Tabs (Using HATEOAS)</h2>
<p>
  This example shows how easy it is to implement tabs using ctmx.
  Following the principle of <a href="https://en.wikipedia.org/wiki/HATEOAS">Hypertext As The Engine Of Application State</a>,
  the selected tab is a part of the application state.
  Therefore, to display and select tabs in your application, simply include the tab markup in the returned HTML.
</p>
<pre id="editor1" class="language-html" style="height: 430px">
;; this is normally on the backend

(defn- tab [i val]
  [:a {:hx-get "content"
       :hx-vals (json {:tab-index i})
       :class (when (= i val) "selected")}
    "Tab " i])

(defcomponent ^:endpoint content [req ^:int tab-index]
  [:div {:hx-target "this"}
    [:div.tab-list
      (map #(tab % tab-index) (range 1 4))]
    [:div.tab-content
      "This is the content for tab " tab-index]])

(make-routes
  "/demo"
  (fn [req]
    (content req 1)))

</pre>
<div id="demo"></div>
</div>


</body>
<script src="../src-min-noconflict/ace.js" type="text/javascript" charset="utf-8"></script>
<script src="../htmx.min.js"></script>
<script src="../htmx-static.js"></script>
<script src="../common.js"></script>
<script>
htmx.config.defaultSwapStyle = 'outerHTML';
edAppend('editor1');
</script>
<script src="/out/ctmx_static.js"></script>
<script>onload = () => ctmx_static.eval.init(true);</script>
</html>
